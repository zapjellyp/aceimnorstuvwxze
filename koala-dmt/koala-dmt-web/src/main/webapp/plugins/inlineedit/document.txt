简单行内编辑插件

插件可选参数如下:
{
	limit		: null,
	type		: "",
	value		: "",
	afterEdit	: function(){return true;},
	css			: {}
}

*********************************************************************************************************************
limit(可选):
类型:整数.
作用:限制行内编辑框可输入的最大长度
描述:

例子:

var limit = 4;

*********************************************************************************************************************
type(可选):
类型:字符串
作用:指定生成的输入框的类型,input和textarea两种
描述:暂时支持两个值:"input" 和 "textarea"

例子:

var type = "input";

*********************************************************************************************************************
afterEdit(可选):
类型:回调函数.
作用:编辑完成后处理编辑结果
描述:回调函数有两个内置参数(target,input),分别指被编辑的dom元素和输入框.特别注意input上绑定一个finish()回调函数,调用此函数
可以立即应用当前编辑结果.当函数返回true时,编辑结果会立即应用到被编辑处,如果不希望等某些操作完成后才应用结果,请返回false,并通
过input上绑定的finish()函数应用编辑结果.

例子:

var afterEdit = function(a,input){
	if(!input.val()){
		input.finish();return;
	}
	
	$.ajax({
		url:"www.xxx.com",
		type:"post",
		data:{name:input.val()},
		success:function(data){
			group_name.html(input.val());
			input.finish();					// input上绑定一个finish()回调函数,调用此函数可以立即应用当前编辑结果(自己应用编辑内容时调用)
		}
	});
	return false;							//如果return true时,在ajax没有返回结果时就应用编辑结果
}

*********************************************************************************************************************
css(可选):
类型:对象.
作用:定制生成编辑框的样式,如果对生成的输入框样式不满意，可以通过此参数进行微调
描述:

例子:

var inputCss = {background:"red"};


最终插件的应用代码如下:

$("#target").miniedit({
	limit:limit,
	type:type,
	afterEdit:afterEdit,
	css:inputCss
});